# Generated by Django 4.2.4 on 2023-08-12 03:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cookie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie_name', models.CharField(max_length=20)),
                ('instructions', models.CharField(max_length=300)),
                ('price', models.IntegerField()),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=20)),
                ('cost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CookieIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(max_length=20)),
                ('unit', models.CharField(choices=[('', 'choose one'), ('cup', 'cup'), ('drop', 'drop'), ('gal', 'gallon'), ('oz', 'ounce'), ('pint', 'pint'), ('lb', 'pound'), ('quart', 'quart'), ('stick', 'stick'), ('tbsp', 'tablespoon'), ('lb', 'teaspoon')], max_length=20)),
                ('more_ingredients', models.BooleanField(default=False)),
                ('cookie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookiejar.cookie')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookiejar.ingredient')),
            ],
        ),
        migrations.AddField(
            model_name='cookie',
            name='ingredients',
            field=models.ManyToManyField(through='cookiejar.CookieIngredient', to='cookiejar.ingredient'),
        ),
    ]
